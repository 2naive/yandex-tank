.TH lunapark 1 "June 6, 2012" "" "LUNAPARK"

.SH НАЗВАНИЕ
lunapark \-  Утилита для тестирования производительности веб сервисов.

.SH СИНТАКСИС
.B lunapark ammo_file | {-c |--config} [config_file] ammo_file | {-s| --skip-step} ammo_file | {-o|--step-only} ammo_file |  {-g | --gatling} ammo_file | ammo_file --script | --clear | --clearall | ammo_file {-p|--phantomlog} phout_file | --manual-start ammo_file | {-i|--instances} <NUM> ammo_file | --address <IP>:<PORT> ammo_file

.SH ОПИСАНИЕ
Документация по настройке и использованию высокопроизводительной hit-based утилиты для тестирования вебсервисов. 

.SH OPTIONS
.PP
\fB-c\fP ,\fB --config exec\fPиспользуется для запуска lunapark в соответствии с конфигурационным файлом config_file. По-умолчанию используется load.conf,  находящийся в локальной папке. Запуск без параметров приведет к созданию config_file с полями по-умолчанию.
.PP
\fB-s\fP, \fB--skip-step\fP запуск теста без генерации файла с запросами, используя уже имеющийся ammo.stpd от предыдущего теста. Полезно? если нужно запустить точно такой же тест, а ждать генерации ammo.stpd не хочется. Для запуска нужны файла ammo.stpd и lp.conf.
.PP
\fB-o\fP,\fB --step-only\fP только подготовка полного набора запросов для теста, сам тест откладывается.
.PP
\fB-g\fP,\fB --gatling\fP использование нескольких IP адресов при проведении теста. Может понадобиться при исчерпании сокетов/исходящих портов.
.PP
\fB--clear\fP очистка директории от служебных файлов, директория ./logs сохраняется. Для полной очистки используйте --clearall
.PP
\fB-p\fP ,\fB --phantomlog\fP загрузка данных тестирования, сгенерированных какой-либо сторонней утилитой в соответствии с форматом phout_file
.PP
\fB--manual-start\fP после генерации полного файла с запросами, стрельба становится на паузу - ожидается согласие на запуск. Удобно использовать для подачи нагрузки в точнозаданный момент.
.PP
\fB-i \fP, \fB--instances\fP принудительное задание числа потоков, перекрывает значения, указанные в config_file
.PP
\fB--address\fP указание IP и порта тестируемой машинки. Перекрывает значения в config_file
.br
.B
\fB ammo_file\fP
файл, содержащий в себе запросы к сервису в req-style или uri-style.
.br
.B
\fB phout_file\fP
файл, содержащий неагрегированные позапросные данные, получаемый в течении всего теста.
.br
.B
\fB phout_file\fP
файл, содержащий неагрегированные позапросные данные, получаемый в течении всего теста.
.br
.SH FILES
    fantom.py
    preproc.pl
    stepper.py
    Lunapark.pm
    lunapark
    load.conf.example
    db.conf
    prd.pl
    yandex_load_lunapark
    yandex_load_lunapark/stepper.py
    yandex_load_lunapark/__init__.py
    yandex_load_lunapark/status.py
.SH NOTES
Будьте осторожны при настройке config_file. При некорректной конфигурации вы можете перегрузить сетевые устройства и/или веб-сервисы.
.SH EXAMPLE
Простейший конфигурационный файл для подачи запросов к корневой странице с постоянной нагрузкой 10 запросов в секунду 
    в течении 10 минут, на сервис с адресом 127.0.0.1, порт 80:
    #### BEGIN ####
    address=127.0.0.1:80 #Адрес и порт тестируемой машинки
    load = const (10,10m) #Схема нагрузки
    header_http = 1.1
    header = [Host: www.target.example.com]
    header = [Connection: close]
    uri = /
    #### END ####

    Конфигурационный файл для запуска сложного теста с поддержкой ammo_file с req-style запросами с ipv6/SSL. 
    Нагрузка задается разными профилями, с поддержкой логгирования, нотификацией и подключением платформы статистики Lunapark
    #### BEGIN ####
    address=2a02:6b8:0:c1f::100:1:80 #Адрес и порт тестируемой машинки
    load = const (10,10m) line(10,100,10m) step(100,500,100,10m) #Схема нагрузки
    ssl = 1
    inform = username
    task = LOAD-999
    #### END ####
